#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define EMPTY 0
typedef struct node {
	char name[20];
	int age;
	char juso[50];
	int korean, english, math;
	struct node*link;
}List;
List*get_node() {
	List*tmp;
	tmp = (List*)malloc(sizeof(List));
	tmp->link = EMPTY;
	return tmp;
}
void InsertNode(List**head, char*name, int age, char*juso, int korean, int english, int math) {
	if (*head == EMPTY) {
		List*tmp;
		tmp = *head;
		*head = get_node();
		strcpy((*head)->name, name);
		(*head)->age = age;
		strcpy((*head)->juso, juso);
		(*head)->korean = korean;
		(*head)->english = english;
		(*head)->math = math;

		(*head)->link = tmp;
		return;
	}
	InsertNode(&(*head)->link, name, age, juso, korean, english, math);
}
List*SearchNode(List**head, char*name) {
	List*tmp = *head;
	int sum = 0;
	double pung;
	char good;
	if (*head == NULL) {
		printf("찾는 학생이 없습니다\n");
		return NULL;
	}
	else if (strcmp((*head)->name, name) == 0)
	{
		printf("<< = = = = = information = = = = = > >\n");
		sum = (*head)->english + (*head)->korean + (*head)->math;
		pung = sum / 3.0;
		if (pung >= 90.0)
			good = 'A';
		else if (pung >= 80.0)
			good = 'B';
		else if (pung >= 70.0)
			good = 'C';
		else if (pung >= 60.0)
			good = 'D';
		else
			good = 'F';

		printf("학생이름 : ");
		puts((*head)->name);
		printf("학생 나이 : %d세\n", (*head)->age);
		printf("학생 주소 : ");
		puts((*head)->juso);
		printf("국어 점수 : %d점\n", (*head)->korean);
		printf("영어 점수 : %d점\n", (*head)->english);
		printf("수학 점수 : %d점\n", (*head)->math);
		printf("합계 점수 : %d점\n", sum);
		printf("평균 점수 : %.3f점\n", pung);
		printf("학생 등급 : %c등급\n", good);
		return tmp;
	}
	else
		return SearchNode(&(*head)->link, name);
}
void ChangeNode(List**head, char*name) {
	List*tmp = SearchNode(&(*head), name);
	int n;
	char naming[20];
	char juso[50];
	int age, kor, eng, mat;
	if (tmp == NULL) {
		return;
	}
	else {
		while (1) {
			system("cls");
			tmp = SearchNode(&(*head), name);
			printf("\n수정할 항목을 선택 하시오\n");
			printf("1.이름 2.나이 3.주소 4.점수 5.수정 종료\n");
			printf("선택 :");
			scanf("%d", &n);
			switch (n) {
			case 1:
				printf("현재 이름 : %s\n", tmp->name);
				printf("수정할 이름 : ");
				getchar();
				gets(naming);
				printf("%s->%s로 수정 완료", tmp->name, naming);
				strcpy(tmp->name, naming);
				strcpy(name, tmp->name);
				system("pause");
				continue;
			case 2:
				printf("현재 나이 : %d세\n", tmp->age);
				printf("수정할 나이 :  세\b\b\b\b");
				scanf("%d", &age);
				printf("%d세->%d세로 수정 완료", tmp->age, age);
				tmp->age = age;
				system("pause");
				continue;
			case 3:
				printf("현재 주소 : %s\n", tmp->juso);
				printf("수정할 주소 : ");
				getchar();
				gets(juso);
				printf("%s->%s로 주소 수정 완료", tmp->juso, juso);
				strcpy(tmp->juso, juso);
				system("pause");
				continue;
			case 4:
				printf("국어 : %d 영어 : %d 수학 : %d\n", tmp->korean, tmp->english, tmp->math);
				printf("수정할 국어 점수 :");
				scanf("%d", &kor);
				printf("수정할 영어 점수 :");
				scanf("%d", &eng);
				printf("수정할 수학 점수 :");
				scanf("%d", &mat);
				tmp->korean = kor;
				tmp->english = eng;
				tmp->math = mat;
				printf("점수 수정완료\n");
				system("pause");
				continue;
			case 5:
				return 0;
			}
		}
	}
}
void DeleteNode(List**head, int delete)
{
	List*tmp = *head;
	if (*head == NULL) {
		printf("찾는 학생이 없습니다\n");
		return;
	}
	else if (strcmp((*head)->name, delete) == 0) {
		(*head) = tmp->link;
		free(tmp);
		printf("삭제 완료\n");
		return;
	}
	DeleteNode(&(*head)->link, delete);
}
void PrintNode(List**head) {
	List*tmp = *head;
	if (tmp != EMPTY) {
		printf("학생이름   학생나이    학생주소\n");
		while (tmp) {
			printf("%s    %5d      %5s\n", tmp->name, tmp->age, tmp->juso);
			tmp = tmp->link;
		}
	}
	else {
		printf("노드가 비어있습니다\n");
	}
}
int main()
{
	List*head = EMPTY;
	char name[20];
	char juso[50];
	int age, kor, eng, mat;
	int n, good, change;
	while (1) {
		system("cls");
		printf("Linked-list 프로그램입니다\n");
		printf("1. 학생 등록\n2. 학생 검색\n3. 학생 목록\n4. 학생 수정\n 5. 학생 삭제\n6. 종료\n");
		printf(">>>>>> : ");
		scanf("%d", &n);
		if (n < 0 || n > 7)
			continue;
		switch (n) {
		case 1:
			system("cls");
			printf("학생이름 입력 :");
			getchar();
			gets(name);
			printf("%s의 나이? :", name);
			scanf("%d", &age);
			printf("%s의 주소? :", name);
			getchar();
			gets(juso);
			printf("%s의 국어 점수? :", name);
			scanf("%d", &kor);
			printf("%s의 영어 점수? :", name);
			scanf("%d", &eng);
			printf("%s의 수학 점수? :", name);
			scanf("%d", &mat);
			InsertNode(&head, name, age, juso, kor, eng, mat);
			system("pause");
			continue;
		case 2:
			system("cls");
			printf("검색할 학생 이름 입력 : ");
			getchar();
			gets(name);
			SearchNode(&head, name);
			system("pause");
			continue;
		case 3:
			system("cls");
			printf("<< = = = = = information = = = = = > >\n");
			PrintNode(&head);
			printf("(학생 개개인의 점수는 검색을 이용하세요!!)\n");
			system("pause");
			continue;
		case 4:
			system("cls");
			printf("수정할 학생의 이름을 입력 하시오:");
			getchar();
			gets(name);
			ChangeNode(&head, name);
			system("pause");
			continue;
		case 5:
			system("cls");
			printf("삭제하실 이름을 입력하시오 : ");
			getchar();
			gets(name);
			DeleteNode(&head, name);
			system("pause");
			continue;

		case 6:
			printf("종료\n");
			return 0;
		}
	}
}