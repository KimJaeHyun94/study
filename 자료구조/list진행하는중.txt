#include<stdio.h>?
#include<stdlib.h>?
#define EMPTY 0
typedef struct node {
	int data;
	struct node*link;
}List;
List*get_node() {
	List*tmp;
	tmp = (List*)malloc(sizeof(List));
	tmp->link = EMPTY;
	return tmp;
}
void InsertNode(List**head, int data) {
	if (*head == EMPTY) {
		List*tmp;
		tmp = *head;
		*head = get_node();
		(*head)->data = data;
		(*head)->link = tmp;
		return;
	}
	InsertNode(&(*head)->link, data);
}
List*SearchNode(List**head, int num) {
	List*tmp = *head;
	if (*head == NULL) {
		return NULL;
	}
	else if ((*head)->data == num) {
		return tmp;
	}
	else
		return SearchNode(&(*head)->link, num);
}
void ChangeNode(List**head, int num, int change) {
	List*tmp = SearchNode(&(*head), num);
	if (tmp == NULL) {
		printf("찾는 값이 없습니다\n");
	}
	else {
		tmp->data = change;
		printf("%d에서 %d로 수정되었습니다\n", num, change);
	}
}
void DeleteNode(List**head, int delete) {
	List*tmp = *head;
	if (head == NULL) {
		printf("찾는 값이 없습니다\n");
		return;
	}
	else if ((*head)->data == delete) {
		(*head) = tmp->link;
		free(tmp);
		return;
	}
	DeleteNode(&(*head)->link, delete);
}
void AddNode(List**head, int num, int plus) {
	List*tmp = (*head)->link;
	if (*head == NULL) {
		printf("찾는 값이 없습니다\n");
		return;
	}
	else if((*head)->data == num){
		(*head)->link = EMPTY;
		InsertNode(&(*head), plus);
		(*head)->link->link = tmp;
		return;
}
	AddNode(&(*head)->link, num, plus);
}
int main()
{
	List*head = EMPTY;
	int num, plus, delete,n,change;
	int good;
	//입력
	printf("입력하고싶은 값을 입력하시오 :");
	scanf("%d", &n);
	InsertNode(&head, n);
	//수정
	printf("수정하고 싶은 값과 수정할 값을 입력하시오 :");
	scanf("%d %d", &good, &change);
	ChangeNode(&head, good, change);
	//삭제
	printf("삭제하실 값을 입력하시오 : ");
	scanf("%d", &delete);
	DeleteNode(&head, delete);
	//삽입
	printf("낑겨넢고 싶은 값을 입력하시오 : ");
	scanf("%d", &num);
	printf("넣고싶은 값은?");
	scanf("%d", &plus);
	AddNode(&head, num, plus);
}